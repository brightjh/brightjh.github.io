(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{304:function(t,s,a){"use strict";a.r(s);var e=a(14),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"dockercompose使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dockercompose使用"}},[t._v("#")]),t._v(" DockerCompose使用")]),t._v(" "),s("blockquote",[s("p",[t._v("Docker Compose是一个用于定义和运行多容器Docker应用程序的工具。它使用YAML文件来定义应用程序的服务、网络、存储卷等配置，并提供简化的命令来启动、停止和管理这些容器")])]),t._v(" "),s("h2",{attrs:{id:"文件示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件示例"}},[t._v("#")]),t._v(" 文件示例")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("web")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" .\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 8080"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/app\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("depends_on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" db\n\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("db")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mysql"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.7")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" MYSQL_ROOT_PASSWORD=secret\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" MYSQL_DATABASE=myapp\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" MYSQL_USER=user\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" MYSQL_PASSWORD=password\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" db_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/lib/mysql\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("db_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n")])])]),s("h2",{attrs:{id:"文件结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件结构"}},[t._v("#")]),t._v(" 文件结构")]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v("version")]),t._v(": 指定 Docker Compose 文件的版本。当前常用的版本有 1、2、2.1、3、3.1 等，每个版本支持不同的语法和功能。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("services")]),t._v(": 定义了要运行的服务列表，每个服务都有自己的配置。")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("web")]),t._v(" 和 "),s("code",[t._v("db")]),t._v(" 是服务的名称。")]),t._v(" "),s("li",[s("code",[t._v("build")]),t._v("（可选）: 指定 Dockerfile 的路径，用于构建镜像。在示例中，使用当前目录下的 Dockerfile 进行构建。")]),t._v(" "),s("li",[s("code",[t._v("image")]),t._v("（可选）: 指定要使用的镜像名称。在示例中，使用官方的 MySQL 5.7 镜像。")]),t._v(" "),s("li",[s("code",[t._v("ports")]),t._v("（可选）: 定义端口映射关系。示例中将容器内的 80 端口映射到主机的 8080 端口。")]),t._v(" "),s("li",[s("code",[t._v("volumes")]),t._v("（可选）: 定义文件或目录的挂载关系。示例中将主机的 "),s("code",[t._v("./app")]),t._v(" 目录挂载到容器的 "),s("code",[t._v("/app")]),t._v(" 路径，以便在容器内访问该目录。")]),t._v(" "),s("li",[s("code",[t._v("depends_on")]),t._v("（可选）: 定义服务之间的依赖关系。示例中，"),s("code",[t._v("web")]),t._v(" 服务依赖于 "),s("code",[t._v("db")]),t._v(" 服务，确保 "),s("code",[t._v("db")]),t._v(" 服务在 "),s("code",[t._v("web")]),t._v(" 服务启动之前启动。")]),t._v(" "),s("li",[s("code",[t._v("environment")]),t._v("（可选）: 定义容器的环境变量。示例中设置了 MySQL 的 root 密码、数据库名、用户名和密码。")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("volumes")]),t._v(": 定义命名卷，用于持久化存储数据。示例中定义了一个名为 "),s("code",[t._v("db_data")]),t._v(" 的命名卷。")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);